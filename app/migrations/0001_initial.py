# Generated by Django 3.1 on 2020-12-06 14:56

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('STUDENT', 'STUDENT'), ('TEACHER', 'TEACHER'), ('ADMIN', 'ADMIN')], default='STUDENT', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('logo', models.ImageField(default='company_logo/default.png', upload_to='company_logo')),
                ('category', models.CharField(choices=[('Business Analytics', 'Business Analytics'), ('Communication and Engineering', 'Communication and Engineering'), ('Construction and Engineering', 'Construction and Engineering'), ('Consultancy', 'Consultancy'), ('Global Fianance Service', 'Global Fianance Service'), ('Health Care Division', 'Health Care Division'), ('R & D Division', 'R & D Division'), ('R & D Media and Mobile Applications', 'R & D Media and Mobile Applications'), ('Supply Chain Management', 'Supply Chain Management'), ('Production and Manufacturing', 'Production and Manufacturing'), ('Other', 'Other')], default='Other', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('group_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('USN', models.CharField(max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], max_length=10)),
                ('date_of_birth', models.DateField(default=datetime.datetime.today)),
                ('profile_pic', models.ImageField(default='profile_pic/default_pic.png', upload_to='profile_pic')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resume')),
                ('is_eligible', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SPC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=20)),
                ('students', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('deadline', models.DateTimeField()),
                ('offer_type', models.CharField(choices=[('DREAM', 'Dream'), ('OPEN', 'Open Dream')], default='DREAM', max_length=20)),
                ('category', models.CharField(choices=[('INTERNSHIP', 'Internship'), ('PLACEMENT', 'Placement')], default='INTERNSHIP', max_length=20)),
                ('required_batch', models.IntegerField(blank=True, null=True)),
                ('eligible_gender', multiselectfield.db.fields.MultiSelectField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')], default='OTHER', max_length=17)),
                ('package', models.FloatField(blank=True, help_text='CTC in LPA', null=True)),
                ('note', models.TextField(blank=True)),
                ('cgpa_cutoff', models.FloatField(default=0)),
                ('X_cutoff', models.FloatField(default=0)),
                ('XII_cutoff', models.FloatField(default=0, help_text='12th/Diploma cutoff percentage')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer', to='app.company')),
                ('eligible_branches', models.ManyToManyField(related_name='eligible_branches', to='app.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=10)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_mode', models.CharField(choices=[('MGMT', 'Management'), ('KCET', 'KCET'), ('COMEDK', 'COMEDK')], default='COMEDK', max_length=10)),
                ('X_board', models.CharField(blank=True, help_text='10th Board name', max_length=20)),
                ('XII_board', models.CharField(blank=True, help_text='12th/Diploma Board name', max_length=20)),
                ('X_percentage', models.FloatField(default=0, help_text='10th percentage')),
                ('XII_percentage', models.FloatField(default=0, help_text='12th percentage')),
                ('sem_1_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_2_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_3_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_4_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_5_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_6_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_7_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('sem_8_sgpa', models.FloatField(blank=True, default=0, null=True)),
                ('cgpa', models.FloatField(blank=True, default=0, null=True)),
                ('graduation_year', models.IntegerField(default=2020)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentGroupEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('graduation_year', models.IntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('pin', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=10)),
                ('alternate_mobile', models.CharField(blank=True, max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='app.student')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PROCESSING', 'PROCESSING'), ('ACCEPTED', 'ACCEPTED'), ('REJECTED', 'REJECTED'), ('HOLD', 'HOLD'), ('WITHDRAWN', 'WITHDRAWN'), ('OTHER', 'OTHER')], default='PROCESSING', max_length=10)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='app.offer')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.student')),
            ],
        ),
    ]
