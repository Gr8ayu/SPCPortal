version: '3'

services:


  spcportal:
    build: .
    volumes:
      - .:/code
      - static_volume:/code/staticfiles  # <-- bind the static volume
      - media_volume:/code/media
    networks:
      - nginx_network
      - database_network
    depends_on:  # <-- wait for db to be "ready" before starting the app
      - postgres


  nginx:
    image: nginx:1.13
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/code/staticfiles  # <-- bind the static volume
      - media_volume:/code/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - spcportal
    networks:
      - nginx_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  postgres:  # <-- IMPORTANT: same name as in DATABASES setting, otherwise Django won't find the database!
    image: postgres:10
    restart: always
    env_file:  # <-- we use the previously defined values
      - config/db/database_env
    networks:  # <-- connect to the bridge
      - database_network
    volumes:
      - database_volume:/var/lib/postgresql/data
    ports: 
        - 5432:5432

  prometheus:
    image: prom/prometheus:v2.14.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks: 
      - prometheus_network
  grafana:
    image: grafana/grafana:6.5.2
    ports:
      - 3060:3000

networks:  
  nginx_network:
    driver: bridge
  database_network:  # <-- add the bridge
    driver: bridge
  prometheus_network:
    driver: bridge

volumes:
  database_volume:
  static_volume:
  media_volume: 
