version: '3'

services:


  spcportal:
    build: .
    hostname: spcportal
    volumes:
      - .:/code
      - static_volume:/code/staticfiles  # <-- bind the static volume
      - media_volume:/code/media
    networks:
      - nginx_network
      - database_network
    depends_on:  # <-- wait for db to be "ready" before starting the app
      - postgres


  nginx:
    image: nginx:1.13
    hostname: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/code/staticfiles  # <-- bind the static volume
      - media_volume:/code/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - spcportal
    networks:
      - nginx_network
      - prometheus_network

    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  postgres:  # <-- IMPORTANT: same name as in DATABASES setting, otherwise Django won't find the database!
    image: postgres:10
    restart: always
    env_file:  # <-- we use the previously defined values
      - config/db/database_env
    networks:  # <-- connect to the bridge
      - database_network
    volumes:
      - database_volume:/var/lib/postgresql/data
    ports: 
        - 5432:5432

  prometheus:
    image: prom/prometheus:v2.14.0
    hostname: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks: 
      - prometheus_network
  grafana:
    hostname: grafana
    image: grafana/grafana:6.5.2
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3060:3000
    networks: 
    - prometheus_network
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    networks: 
    - prometheus_network
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    # - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
    - 6379:6379

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks: 
    - prometheus_network

networks:  
  nginx_network:
    driver: bridge
  database_network:  # <-- add the bridge
    driver: bridge
  prometheus_network:
    driver: bridge

volumes:
  database_volume:
  static_volume:
  media_volume: 
  grafana-data: